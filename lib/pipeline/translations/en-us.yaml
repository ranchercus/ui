languageName: "English"
languageContribute: "Help Translate Rancher"


##############################
# Really generic things used in multiple places (use sparingly)
##############################
generic:
  authorize: Authorize & Fetch Your Repositories
  branch: Branch
  commit: Commit
  repository: Repository
  registry: Registry
  image: Image
  imageName: Image Name
  loginIn: Login in
  logout: Log Out User {user}
  pipeline: Pipeline
  is: is
  push: Push to Repository
  noBranch: There is no branch in this repository.
  github: GitHub
  gitlab: GitLab
  bitbucket: Bitbucket
  required: '{key} is required.'
##############################
# Resource Actions
##############################
action:
  rerun: Rerun
  run: Run

pipelinesPage:
  table:
    status: Status
    noData: There are no pipelines defined.
    noMatch: No pipelines match the current search.
  pipelines: Pipelines
  lastActivity: Last Run

pipelinesSetting:
  globalConfigChangeLabel: Use OAuth Application in Authentication
  customConfigChangeLabel: Use another OAuth Application
  userGlobalConfig: GitHub Authentication is enabled, you can use it directly.
  gitAuthentication: Git Authentication
  authenticateWithGit: Authenticate with git repository
  authenticatedUsers: Authenticated Users
  sureToDisableOAuth: Are You Sure You Want To Disable Repository Authentication?
  disableOAuth: Disable Repository Authentication
  dataClear: Data Clear
  resetData: Reset all of the pipeline related data.
  clearing: Clearing
  sureToClearData: Are You Sure To Clear Data?
  clearData: Clear Data
  error:
    limit: Error saving limit and request
  info:
    noPermission: You don't have permission to configure pipelines.

repositories:
  header: Repositories
  enable: Configure Repositories
  message: You can select an example repository or fetch your own repositories to setup pipelines.
  table:
    repository: Repository
    noData: There are no repositories
    noMatch: No repositories match the current search

newPipeline:
  steps:
    label: Configuration
  save: Save

newPipelineStage:
  errors:
    name:
      required: Name is required.
  header:
    create: Add Stage
    edit: Edit Stage
  name:
    placeholder: e.g. compile
  addStep: Add a Step
  trigger:
    webhook: Push
    webhookPR: Pull Request
    webhookTag: Tag

newPipelineStep:
  header:
    create: Add Step
    edit: Edit Step
  stepType:
    label: Step Type
    image: Base Image
    env: Environment Variables
    enableBranch: Configure pipeline for this branch.
    publishCatalog:
      label: Publish Template
      secret:
        label: Secret
        missingKey: The selected secret doesn't have {key} key.
      auth:
        http: '<code>USERNAME</code> and <code>PASSWORD</code> in the secret will be used as username and password.'
        ssh: '<code>DEPLOY_KEY</code> in the secret will be used as deploy key.'
      stepName: Publish Catalog Template
      targets:
        label: Protocal
        http: Push to Git with HTTP(S)
        ssh: Push to Git with SSH
      path:
        label: Chart Folder
        placeholder: e.g. ./charts/wordpress/latest
        helpText: 'The folder path where <code style="padding: 2px 5px;">Chart.yaml</code> is in the repository.'
      catalogTemplate:
        label: Catalog Template Name
        placeholder: e.g. wordpress
        helpText: The name of the template want to publish.
      version:
        label: Catalog Template Version
        placeholder: e.g. latest
        helpText: The version of the template you want to publish.
      gitUrl:
        label: Git URL
        placeholder:
          ssh: e.g. git@github.com:myrepo/charts.git
          http: e.g. https://github.com/myrepo/charts.git
        helpText: The Git URL where the template will be published to.
        error: The Git URL should start with http or https.
      gitBranch:
        label: Git Branch
        placeholder: e.g. dev
        helpText: The Git branch which the template will be published to.
      gitAuthor:
        label: Author Name
        placeholder: e.g. user
        helpText: The author name used in the commit message.
      gitEmail:
        label: Author Email
        placeholder: user@example.com
        helpText: The author email used in the commit message.


    applyApp:
      label: Deploy App
      stepName: Deploy Catalog App
      catalog:
        label: Catalog
      catalogTemplate:
        label: Template Name
        helpText: You can select an existing template or input a new template name.
      version:
        label: Template Version
        helpText: You can select an existing version or input a new version.
      name:
        label: App Name
        placeholder: e.g. myapp
      targetNamespace:
        label: Namespace
        helpText: The target namespace where you want to deploy this app.

    applyYaml:
      label: Deploy YAML
      yaml: YAML Path
      env:
        header: Environment Variables
        addActionLabel: Add Variable
        keyPlaceholder: IMAGE_TAG
      errors:
        path:
          required: YAML Path is required.
    scm:
      noYaml: There is no <code>.rancher-pipeline.yml</code> file in the repository.
      demoGroup: Example repositories
      selectRepository: Repository
      add: Select Repository
      refresh: Refresh Repositories
      user: User
      trigger: Pipeline Trigger
      noWebhook: No permission to set repository webhooks
    build:
      imageName:
        placeholder: e.g. example/app:v1
      errors:
        tag:
          required: Image Name is required.
        dockerfilePath:
          required: Dockerfile Path is required.
        registry:
          required: Registry is required.
      noRegistry: There is no registries. You can click <a href="{route}" target="_blank" rel="nofollow noreferrer">here</a> to add a registry.
      pushRemote: Push image to remote repository.
      label: Build and Publish Image
      dockerFilePath: Dockerfile Path
      buildContext: Build Context
    task:
      label: Run Script
      shellScript: Shell Script
      customEntryPoint: Custom Entrypoint
      secret: Inject Environment Variables From Secrets
      errors:
        image:
          required: Base Image is required.
        shellScript:
          required: Shell Script is required.
      privileged:
        label: Run this step in privileged mode.
      shell:
        label: Shell
      command:
        label: Command
        placeholder: Arguments of entrypoint
      entryPoint:
        label: EntryPoint
        placeholder: If you want use the default entrypoint, just leave me empty

authPage:
  setting:
    executor:
      label: The maximum number of pipeline executors
      scale: Scale
    cacerts:
      label: Configure custom CA to support clone from self-signed git service
      show: Edit cacerts
      saveActionLabel: Save cacerts
    limit:
      label: Configure the resource limit and reservation for executors
      saveActionLabel: Update Limit and Reservation
  header: Pipeline Setting
  setup: "1. Setup a {type} application"
  authenticated:
    header:
      text: Repository Authentication Information
      enterpriseHostName: "Host:"
      clientId:
        text: "Client ID:"
      key:
        text: "Key:"
  testAuth:
    header: '3. Test and enable authentication'
    subtext: 'Check that your application is configured correctly by testing authentication with it:'
    buttonText:
      preVariable: Authenticate
      post: Authenticating
  form:
    headerVariable: '2. Configure the pipeline to use your {SCM} for authentication'
    isEnterprise:
      labelText: Use a https connection
    enterprise:
      labelText: Use a private {type} enterprise installation
    enterpriseHost:
      labelText: Enterprise Host
      placeholder: 'e.g. example.com'
  gitlab:
    auth: 'For standard GitLab, <a href="https://gitlab.com/profile/applications" target="_blank" rel="nofollow noreferrer">click here</a> to go to applications settings in a new window.'
    enterpriseAuth: "For GitLab Enterprise, login to your account.  Click on Settings, then Applications."
    ul:
      li2:
        text: 'Fill out the form:'
        ul:
          li1: '<b>Name:</b> <span class="text-muted">Anything you like, e.g. My Pipeline</span>'
          li2: Redirect URI
      li3:
        text: 'Click "Save application" '
    form:
      subtextVariable: 'Copy and paste the Application Id and Secret from your newly-created application.'
      clientId:
        labelText: Application Id
      clientSecret:
        labelText: Secret
  github:
    auth: 'For standard GitHub, <a href="https://github.com/settings/developers" target="_blank" rel="nofollow noreferrer">click here</a> to go to applications settings in a new window.'
    enterpriseAuth: "For Github Enterprise, login to your account.  Click on Settings, then Developer settings."
    ul:
      li2:
        text: 'Click "Register new application" and fill out the form:'
        ul:
          li1: '<b>Application name:</b> <span class="text-muted">Anything you like, e.g. My Pipeline</span>'
          li2: Homepage URL
          li3: '<b>Application description:</b> <span class="text-muted">Anything you like, optional</span>'
          li4: Authorization callback URL
      li3:
        text: 'Click "Register Application" '
    form:
      subtextVariable: 'Copy and paste the Client ID and Secret from your newly-created application.'
      clientId:
        labelText: Client ID
      clientSecret:
        labelText: Client Secret
  bitbucketcloud:
    target:
      header: '1. Choose the Bitbucket type you want to use'
      bitbucketserver: 'Use private Bitbucket Server setup'
      bitbucketcloud: 'Use public Bitbucket Cloud'
    setup: '2. Setup a Bitbucket Cloud application'
    auth: 'For Bitbucket Cloud, <a href="https://bitbucket.org/account" target="_blank" rel="nofollow noreferrer">click here</a> to go to user settings in a new window.'
    ul:
      li2:
        text: 'Click "OAuth", then click "Add consumer" and fill out the form:'
        ul:
          li1: '<b>Name:</b> <span class="text-muted">Anything you like, e.g. My Pipeline</span>'
          li2: Callback URL
          li3: '<b>Select Permissions</b> <b>Account Read</b>, <b>Pull Requests Write</b>, <b>Projects Read</b> and <b>Webhooks Read And Write</b>'
      li3:
        text: 'Click "Save" '
    form:
      headerVariable: '3. Configure the pipeline to use your Bitbucket Cloud for authentication'
      subtextVariable: 'Copy and paste the Key and Secret from your newly-created consumer.'
      clientId:
        labelText: Key
      clientSecret:
        labelText: Secret
  bitbucketserver:
    warning: Bitbucket server webhooks need to do SSL verification, please ensure that {appName} server’s certificate is trusted by the bitbucket server. More info can be found <a href="https://rancher.com/docs/rancher/v2.x/en/tools/pipelines/configurations/#1-configuring-version-control-providers" target="_blank" rel="nofollow noopener noreferrer">here</a>.
    copy: Click the icon to copy it
    target:
      header: '1. Choose the Bitbucket type you want to use'
      bitbucketserver: 'Use private Bitbucket Server setup'
      bitbucketcloud: 'Use public Bitbucket Cloud'
    setup: '2. Setup a Bitbucket Server application'
    auth: 'For Bitbucket Server, login to your account. Click on Administration, then Application Links.'
    ul:
      li2:
        text: 'Create a new application link:'
        ul:
          li1: '<b>Link:</b>'
          li2: '<b>Application Name:</b> <span class="text-muted">Anything you like, e.g. My Pipeline</span>'
          li3: '<b>Select Create incoming link</b>'
          li4: '<b>Click "Continue"</b>'
          li5: 'Consumer Key:'
          li6: '<b>Consumer Name:</b> <span class="text-muted">Anything you like, e.g. pipeline</span>'
          li7: 'Public Key:'
          li8: '<b>Click "Continue"</b>'
    form:
      headerVariable: '3. Configure the pipeline to use your Bitbucket Server for authentication'
      hostname:
        labelText: Bitbucket Server Host
        placeholder: e.g. example.com
        required: Bitbucket Server Host is required.
      tls:
        labelText: Use a https connection
pipelineDetailPage:
  header: 'Pipeline: {name}'
  repository: Repository
  lastRun: Last Run
  triggered: Triggered
  commitMessage: Commit Message
  activity:
    title: Activities
    detail: Build history of this pipeline.
    table:
      noData: There are no activities.
      noMatch: No activities match the current search.
      status: Status
      branch: Branch
      runNumber: Run
      commit: Commit
      triggered: Triggered

runPipeline:
  title: 'Run "{name}"'
  noBranch: There is no <code>.rancher-pipeline.yml</code> file in the repository. You can click <b>Edit Config</b> to edit it in wizard or click <b>View/Edit YAML</b> to edit in YAML.
  branch:
    label: 'Branch'

pipelineSetting:
  title: 'Pipeline Setting "{name}"'

buildDetailPage:
  header: 'Pipeline Run: #{name}'
  duration: Duration
  stillRunning: Still Running
  log:
    title: Detailed Log
    detail: The detailed log of the current pipeline run.
    waiting: Waiting...
    loading: Loading...


enablePipeline:
  header: Enable Repository Authentication
  configNow: Config Now
  helpText:
    Repository authentication is not enabled. You need to enable it first.
  noPermission:
    Repository authentication is not enabled. You need to contact project owner to enable it first.

editYamlPipeline:
  title: 'View/Edit YAML "{name}"'
  branch:
    label: 'Branch'

editPipelineConfig:
  header: Edit Pipeline Configuration
  pushToReop: Push the modified configuration to remote repository automatically.
  download: Download the modified configuration only.
  timeout:
    label: Timeout
    helpText: How long to wait without seeing build finished before aborting the build.
pipelineSelector:
  header: Trigger Rules
  table:
    type: Type
    value: Value
  title:
    include: 'Run this {type} when:'
    exclude: 'Do Not Run this {type} when:'
  addRule: Add Rule
  branch: Branch
  event: Event
  pr: Pull Request
  push: Push
  tag: Tag

fromSecret:
  addFrom: Add From Secret
  secret:
    label: Secret
  prefixOrKey:
    label: Key
  prefix:
    label: Alias
  keyLabel: Variable
  keyPlaceholder: e.g. FOO
  valueLabel: Value
  valuePlaceholder: e.g. bar

pipelineNotification:
  header: Notification
  when: When build status is
  condition:
    success:
      label: Success
    changed:
      label: Changed
    failed:
      label: Failed
    required: Build Status is required
  recipients:
    required: Recipient is required
  asMessage: Send a message to
