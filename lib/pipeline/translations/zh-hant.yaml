---
languageName: "簡體中文"
languageContribute: "幫助翻譯Rancher"


##############################
# Really generic things used in multiple places (use sparingly)
##############################
generic:
  authorize: 認證 & 同步代碼庫
  branch: 分支
  commit: 提交
  repository: 代碼庫
  registry: 鏡像庫
  image: 鏡像
  imageName: 鏡像名稱
  loginIn: 登入
  logout: 退出用戶{user}
  pipeline: 流水線
  is: 是
  push: 提交到代碼庫
##############################
# Resource Actions
##############################
action:
  rerun: 重新運行
  run: 運行

pipelinesPage:
  table:
    status: 狀態
    noData: 沒有任何流水線
    noMatch: 沒有流水線符合當前搜索
  pipelines: 流水線
  lastActivity: 最新運行

pipelinesSetting:
  globalConfigChangeLabel: 使用OAuth應用程序去認證
  customConfigChangeLabel: 使用另壹個OAuthe應用程序
  userGlobalConfig: GitHub身份驗證已啟用，您可以使用它來直接啟用Pipline。
  gitAuthentication: Git驗證
  authenticateWithGit: 用Git進行身份驗證
  authenticatedUsers: 已授權的用戶
  sureToDisableOAuth: 您確定要取消授權嗎？
  disableOAuth: 取消授權
  dataClear: 清除數據
  resetData: 重置所有與流水線相關的數據
  clearing: 清除中
  sureToClearData: 確定要清除數據嗎？
  clearData: 清除數據

repositories: 
  header: 代碼庫
  enable: 設置代碼庫
  message: 選擇壹個示例代碼庫或者使用您自己的代碼庫來設置流水線。
  table:
    repository: 代碼庫
    noData: 沒有任何代碼庫
    noMatch: 沒有代碼庫符合當前搜索

newPipeline:
  steps:
    label: 流水線配置
  save: 保存

newPipelineStage:
  errors:
    name:
      required: 請輸入名稱。
  header:
    create: 添加階段
    edit: 編輯階段
  name:
    placeholder: "例如: compile"
  addStep: 添加步驟
  trigger:
    webhook: 推送
    webhookPR: 拉取請求
    webhookTag: Tag

newPipelineStep:
  header:
    create: 添加步驟
    edit: 編輯步驟
  stepType:
    label: 步驟類型
    image: 基礎鏡像
    env: 環境變量
    enableBranch: 設置流水線
    applyYaml:
      label: 部署YAML
      yaml: YAML路徑
      env: 
        header: 環境變量
        addActionLabel: 添加變量
        keyPlaceholder: IMAGE_TAG
      errors:
        path:
          required: 請輸入YAML路徑。
    scm:
      noYaml: 代碼庫中沒有發現<code>.rancher-pipeline.yml</code>文件。
      demoGroup: 示例代碼庫
      selectRepository: 代碼庫
      add: 選擇代碼庫
      refresh: 刷新代碼庫
      user: 用戶
      trigger: 流水線觸發
      noWebhook: 沒有設置代碼庫Webhook的權限
    build:
      imageName:
        placeholder: '例如: example/app:v1'
      errors:
        tag:
          required: 請輸入鏡像名稱
        dockerfilePath:
          required: 請輸入Dockerfile的路徑。
        registry:
          required: 請選擇鏡像倉庫。
      noRegistry: 沒有配置鏡像倉庫。您可以點擊<a href="{route}" target="_blank">這裏</a>配置鏡像倉庫。
      pushRemote: 推送鏡像到遠端鏡像倉庫。
      label: 構建並發布鏡像
      dockerFilePath: Dockerfile路徑
      buildContext: 構建上下文
    task:
      label: 運行腳本
      shellScript: 腳本
      customEntryPoint: 自定義EntryPoint
      secret: 從密文中註入環境變量
      errors:
        image:
          required: 請輸入基礎鏡像。
        shellScript:
          required: 請輸入要運行的腳本。
      privileged:
        label: 以特權模式運行該步驟。
      shell: 
        label: 腳本
      command:
        label: 命令
        placeholder: EntryPoint的參數
      entryPoint:
        label: EntryPoint
        placeholder: 該項留空將使用默認的EntryPoint

authPage:
  setting:
    executor: 
      label: 最大流水線運行個數
      scale: 數量
  header: 流水線設置
  setup: "1. 配置{type}應用"
  authenticated:
    header:
      text: 代碼庫認證信息
      enterpriseHostName: "地址:"
      clientId:
        text: "客戶端ID:"
  testAuth:
    header: '3. 測試並啟用驗證'
    subtext: '通過測試認證來檢查配置是否正確:'
    buttonText:
      preVariable: 授權
      post: 保存中
  form:
    headerVariable: '2. 完成配置，並使用您的{SCM}賬號進行驗證'
    isEnterprise:
      labelText: 使用https連接
    enterprise:
      labelText: '使用私有{type}企業版部署'
    enterpriseHost:
      labelText: 地址
      placeholder: '例如: example.com'
  gitlab:
    auth: '標準GitLab: <a href="https://gitlab.com/profile/applications" target="_blank">點擊此處</a>，在彈出的新窗口中進行應用設置。'
    enterpriseAuth: "企業版GitLab: 請登錄您的GitLab賬號，點擊Settings，然後點擊Applications進行設置。"
    ul:
      li2:
        text: '填寫表單內容:'
        ul:
          li1: '<b>名稱: </b><span class="text-muted">應用名稱，例如: My Pipeline。</span>'
          li2: '回調URL:'
      li3:
        text: '點擊Save application'
    form:
      subtextVariable: '將新創建應用的Application Id和Secret復制粘貼到對應的輸入框中'
      clientId:
        labelText: 應用ID
      clientSecret:
        labelText: 秘鑰

  github:
    auth: '標準GitHub: <a href="https://github.com/settings/developers" target="_blank">點擊此處</a>，在彈出的新窗口中進行應用設置。'
    enterpriseAuth: "企業版GitHub: 請登錄您的GitHub賬號，點擊Settings，然後點擊Applications進行設置。"
    ul:
      li2:
        text: '點擊"Register new application"並填寫表單內容:'
        ul:
          li1: '<b>應用名稱: </b> <span class="text-muted">應用名稱，例如: My Pipeline。</span>'
          li2: '主頁URL:'
          li3: '<b>應用描述: </b> <span class="text-muted">應用描述，可選。</span>'
          li4: '授權回調URL:'
      li3:
        text: '點擊Register Application'
    form:
      subtextVariable: '將新創建應用的Client ID和Client Secret復制粘貼到對應的輸入框中'
      clientId:
        labelText: 客戶端ID
      clientSecret:
        labelText: 客戶端秘鑰

pipelineDetailPage:
  header: '流水線: {name}'
  repository: 代碼庫
  lastRun: 最新運行
  triggered: 觸發時間
  commitMessage: 提交信息
  activity:
    title: 運行
    detail: 流水線的歷史運行列表
    table:
      noData: 沒有任何運行。
      noMatch: 沒有運行符合當前搜索。
      status: 狀態
      branch: 分支
      runNumber: 運行
      commit: 提交信息
      triggered: 觸發時間

runPipeline:
  title: '運行{name}'
  noBranch: '該代碼庫沒有發現<code>.rancher-pipeline.yml</code>文件。您可以點擊<b>編輯配置</b>通過向導的方式配置流水線，也可以點擊<b>查看/編輯YAML</b>直接修改配置。'
  branch: 
    label: '分支'

pipelineSetting:
  title: '流水線設置"{name}"'

buildDetailPage:
  header: '流水線運行: #{name}'
  duration: 運行時間
  stillRunning: 仍在運行
  log:
    title: 詳細日誌
    detail: 當前流水線運行的詳細日誌。
    waiting: Waiting...
    loading: Loading...


enablePipeline:
  header: 啟用代碼庫認證
  configNow: 立即設置
  helpText:
    代碼庫認證尚未開啟,需要先開啟代碼庫認證。
  noPermission:
    代碼庫認證尚未開啟,需要聯系項目管理員設置認證。

editYamlPipeline:
  title: '查看/編輯YAML{name}'
  branch: 
    label: '分支'

editPipelineConfig:
  header: 修改流水線配置
  pushToReop: 將如下的流水線配置自動推送到遠端代碼庫。
  download: 僅下載流水線配置。
  timeout:
    label: 超時時間
    helpText: 如果構建在該時間內沒有執行完成，則終止本次構建。
pipelineSelector:
  header: 觸發規則
  table:
    type: 類型
    value: 值
  title: 
    include: '當滿足條件時運行該{type}'
    exclude: '當滿足條件時不運行該{type}'
  addRule: 添加規則
  branch: 分支
  event: 事件
  pr: 拉取請求
  push: 推送
  tag: Tag

fromSecret:
  addFrom: 從密文中添加
  secret:
    label: 密文
  prefixOrKey:
    label: 鍵
  prefix:
    label: 別名
  keyLabel: 變量
  keyPlaceholder: '例如: Foo'
  valueLabel: 值
  valuePlaceholder: '例如: bar'
